version: "3.8"
services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - /var/lib/rabbitmq
    env_file:
      - .env
  
  # auth:
  #   build:
  #     context: ./
  #     dockerfile: ./apps/auth/Dockerfile
  #   env_file:
  #     - .env
  #   depends_on:
  #     - rabbitmq
  #     - postgres
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   command: npm run start:dev auth
  
  # api:
  #   build:
  #     context: ./
  #     dockerfile: ./apps/api/Dockerfile
  #   ports:
  #     - '4000:5000'
  #   env_file:
  #     - .env
  #   depends_on:
  #     - rabbitmq
  #     - auth
  #     - presence
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   command: npm run start:dev api

  # presence:
  #   build:
  #     context: ./
  #     dockerfile: ./apps/presence/Dockerfile
  #   env_file:
  #     - .env
  #   depends_on:
  #     - rabbitmq
  #     - postgres
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   command: npm run start:dev presence

  postgres:
    image: postgres
    container_name: postgres_messenger
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - ./db/data:/var/lib/postgresql/data
  
  postgres_admin:
    image: dpage/pgadmin4:latest
    depends_on:
      - postgres
    env_file:
      - .env
    ports:
      - '15432'
